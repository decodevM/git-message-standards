#!/bin/bash

# Check if the input is a file or a string
if [ -f "$1" ]; then
  # If it's a file, read the commit message from the file
  COMMIT_MSG=$(<"$1")
elif [ -n "$1" ]; then
  # If it's a string, use the passed argument as the commit message
  COMMIT_MSG="$1"
else
  # If no input is provided, print an error message
  echo "❌ ERROR: No commit message or file provided."
  exit 1
fi

# Define the regex pattern for valid commit messages
REGEX="^(feat|fix|docs|style|refactor|perf|test|chore)\([A-Z][a-zA-Z0-9 _-]+\): [A-Z].{0,149}(\n\n.+)?(\n\nRefs: #?[a-zA-Z0-9_-]+)?$"

# Debugging: Display the commit message being validated
echo "Commit message being validated: $COMMIT_MSG"

# Check if the commit message matches the regex
if echo "$COMMIT_MSG" | grep -Eq "$REGEX"; then
  echo "✅ Commit message is valid."
else
  echo "❌ ERROR: Commit message is invalid."
  exit 1
fi